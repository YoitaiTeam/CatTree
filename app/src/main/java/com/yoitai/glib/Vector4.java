package com.yoitai.glib;

//============================================================================
//                       ４次元座標クラス
//============================================================================
public class Vector4 {
	// ===================================================
	//                      置換文字
	// ===================================================

	// ===================================================
	//                    メンバー定義
	// ===================================================
	public float X;
	public float Y;
	public float Z;
	public float W;

	// ===================================================
	//                     メソッド
	// ===================================================
	// ---------------------------------------------------
	//                   コンストラクタ
	// ---------------------------------------------------
	public Vector4(float _x ,float _y ,float _z ,float _w)
	{
		X = _x;
		Y = _y;
		Z = _z;
		W = _w;
	}

	// ---------------------------------------------------
	//                   コンストラクタ
	// ---------------------------------------------------
	public Vector4()
	{
		X = 0;
		Y = 0;
		Z = 0;
		W = 0;
	}

	// ---------------------------------------------------
	//                   コピー
	// ---------------------------------------------------
	public void Copy(Vector4 _src)
	{
		X = _src.X;
		Y = _src.Y;
		Z = _src.Z;
		W = _src.W;
	}

	// ---------------------------------------------------
	//                   設定
	// ---------------------------------------------------
	public void Set(float _x ,float _y ,float _z ,float _w)
	{
		X = _x;
		Y = _y;
		Z = _z;
		W = _w;
	}

	// ---------------------------------------------------
	//                   加算
	// ---------------------------------------------------
	public void Add(Vector4 _src)
	{
		Add(_src ,null);
	}
	public void Add(Vector4 _src ,Vector4 _dst)
	{
		if( _dst == null ){
			X += _src.X;
			Y += _src.Y;
			Z += _src.Z;
			W += _src.W;
		}else{
			_dst.X = X + _src.X;
			_dst.Y = Y + _src.Y;
			_dst.Z = Z + _src.Z;
			_dst.W = W + _src.W;
		}
	}

	// ---------------------------------------------------
	//                   減算
	// ---------------------------------------------------
	public void Subtract(Vector4 _src)
	{
		Subtract(_src ,null);
	}
	public void Subtract(Vector4 _src ,Vector4 _dst)
	{
		if( _dst == null ){
			X -= _src.X;
			Y -= _src.Y;
			Z -= _src.Z;
			W -= _src.W;
		}else{
			_dst.X = X - _src.X;
			_dst.Y = Y - _src.Y;
			_dst.Z = Z - _src.Z;
			_dst.W = W - _src.W;
		}
	}

	// ---------------------------------------------------
	//                   乗算
	// ---------------------------------------------------
	public void Multiply(float _t)
	{
		Multiply(_t ,null);
	}
	public void Multiply(float _t ,Vector4 _dst)
	{
		if( _dst == null ){
			X *= _t;
			Y *= _t;
			Z *= _t;
			W *= _t;
		}else{
			_dst.X = X * _t;
			_dst.Y = Y * _t;
			_dst.Z = Z * _t;
			_dst.W = W * _t;
		}
	}

	// ---------------------------------------------------
	//                   除算
	// ---------------------------------------------------
	public void Divide(float _t)
	{
		Divide(_t ,null);
	}
	public void Divide(float _t ,Vector4 _dst)
	{
		if( _dst == null ){
			X /= _t;
			Y /= _t;
			Z /= _t;
			W /= _t;
		}else{
			_dst.X = X / _t;
			_dst.Y = Y / _t;
			_dst.Z = Z / _t;
			_dst.W = W / _t;
		}
	}
}
